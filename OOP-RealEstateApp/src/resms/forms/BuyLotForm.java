/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package resms.forms;

import resms.lot.LotDatabase;
import resms.transactions.TransactionDatabase;
import resms.table.LotTable;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import resms.lot.Lot;
import resms.lot.LotAvailability;

/**
 *
 * @author Renz Joshua
 */
public class BuyLotForm extends javax.swing.JFrame {
    private LotDatabase ld;
    private TransactionDatabase td;
    /**
     * Creates new form RealEstateApp
     */
    public BuyLotForm() {
        initComponents();
        setResizable(false);
        displayPropertyTable();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        jLabelLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resms/icons/logo.png")));
        
        Runtime.getRuntime().addShutdownHook(new Thread(() -> {
            ld.importDetails();
            td.importDetails();
        }));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        propertyTable = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        MainPanel = new javax.swing.JTabbedPane();
        propertyPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSizeMin = new javax.swing.JTextField();
        jSizeMax = new javax.swing.JTextField();
        jPriceMax = new javax.swing.JTextField();
        jComboBlock = new javax.swing.JComboBox<>();
        SearchProperties = new javax.swing.JButton();
        RefreshProperties = new javax.swing.JButton();
        jPriceMin = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jComboType = new javax.swing.JComboBox<>();
        jCheckAvailability = new javax.swing.JCheckBox();
        acquirePanel = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Finalize = new javax.swing.JButton();
        PropertyPrice = new javax.swing.JTextField();
        CustomerName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        TransactionType = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        PropertyCode = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        CustomerNo = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jLabel22 = new javax.swing.JLabel();
        jLabelLogo = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        jFormattedTextField1.setText("jFormattedTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(249, 226, 175));

        propertyTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        propertyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        propertyTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        propertyTable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        propertyTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        propertyTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                propertyTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(propertyTable);

        jPanel7.setBackground(new java.awt.Color(0, 159, 189));

        jPanel4.setBackground(new java.awt.Color(74, 36, 157));
        jPanel4.setForeground(new java.awt.Color(74, 36, 157));

        MainPanel.setBackground(new java.awt.Color(0, 159, 189));
        MainPanel.setForeground(new java.awt.Color(255, 255, 255));
        MainPanel.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        propertyPanel.setBackground(new java.awt.Color(0, 159, 189));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Size (sqm):");

        jSizeMin.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jSizeMin.setPreferredSize(new java.awt.Dimension(70, 24));
        jSizeMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSizeMinActionPerformed(evt);
            }
        });

        jSizeMax.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jSizeMax.setPreferredSize(new java.awt.Dimension(70, 24));

        jPriceMax.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jPriceMax.setPreferredSize(new java.awt.Dimension(70, 24));
        jPriceMax.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPriceMaxActionPerformed(evt);
            }
        });

        jComboBlock.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jComboBlock.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "1","2","3","4","5" }));

        SearchProperties.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        SearchProperties.setText("Search");
        SearchProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchPropertiesActionPerformed(evt);
            }
        });

        RefreshProperties.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        RefreshProperties.setText("View All Lots");
        RefreshProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshPropertiesActionPerformed(evt);
            }
        });

        jPriceMin.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jPriceMin.setPreferredSize(new java.awt.Dimension(70, 24));

        jLabel13.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(238, 238, 238));
        jLabel13.setText("________________________________");

        jLabel14.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Block:");

        jLabel15.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Price (php):");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("—");

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("—");

        jLabel18.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Type:");

        jComboType.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jComboType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Any", "EmptyLot", "OneStory", "TwoStory" }));

        jCheckAvailability.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jCheckAvailability.setForeground(new java.awt.Color(255, 255, 255));
        jCheckAvailability.setText("  Display Only Available Lots");
        jCheckAvailability.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckAvailabilityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout propertyPanelLayout = new javax.swing.GroupLayout(propertyPanel);
        propertyPanel.setLayout(propertyPanelLayout);
        propertyPanelLayout.setHorizontalGroup(
            propertyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, propertyPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(propertyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckAvailability, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(propertyPanelLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboType, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(propertyPanelLayout.createSequentialGroup()
                        .addGroup(propertyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, propertyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel14)
                                .addComponent(jLabel2)))
                        .addGap(18, 18, 18)
                        .addGroup(propertyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jComboBlock, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(propertyPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(propertyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(propertyPanelLayout.createSequentialGroup()
                                        .addComponent(jSizeMin, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(jSizeMax, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(propertyPanelLayout.createSequentialGroup()
                                        .addComponent(jPriceMin, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(jPriceMax, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addComponent(SearchProperties, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(RefreshProperties, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(17, 17, 17))
        );
        propertyPanelLayout.setVerticalGroup(
            propertyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propertyPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(propertyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jSizeMin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jSizeMax, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(propertyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(propertyPanelLayout.createSequentialGroup()
                        .addComponent(jComboBlock, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(propertyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPriceMin, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPriceMax, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(propertyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboType, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jCheckAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(SearchProperties, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(RefreshProperties, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        MainPanel.addTab("            Lots            ", propertyPanel);

        acquirePanel.setBackground(new java.awt.Color(0, 159, 189));

        jLabel11.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Price:");

        jLabel12.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Name:");

        Finalize.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        Finalize.setText("Finalize");
        Finalize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FinalizeActionPerformed(evt);
            }
        });

        PropertyPrice.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        PropertyPrice.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        PropertyPrice.setEnabled(false);
        PropertyPrice.setPreferredSize(new java.awt.Dimension(70, 24));
        PropertyPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PropertyPriceActionPerformed(evt);
            }
        });

        CustomerName.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        CustomerName.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        CustomerName.setPreferredSize(new java.awt.Dimension(70, 24));
        CustomerName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerNameActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Action:");

        TransactionType.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        TransactionType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buy", "Rent" }));
        TransactionType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TransactionTypeActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("________________________________");

        PropertyCode.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        PropertyCode.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        PropertyCode.setEnabled(false);
        PropertyCode.setPreferredSize(new java.awt.Dimension(70, 24));
        PropertyCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PropertyCodeActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Property:");

        jLabel16.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Contact No:");

        CustomerNo.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        CustomerNo.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        CustomerNo.setPreferredSize(new java.awt.Dimension(70, 24));
        CustomerNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CustomerNoActionPerformed(evt);
            }
        });

        jLabel21.setFont(new java.awt.Font("Verdana", 0, 13)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Mode:");

        jCheckBox1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Credit Card");

        jCheckBox2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setText("Bank Transfer");

        jLabel22.setFont(new java.awt.Font("Verdana", 1, 13)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("________________________________");

        javax.swing.GroupLayout acquirePanelLayout = new javax.swing.GroupLayout(acquirePanel);
        acquirePanel.setLayout(acquirePanelLayout);
        acquirePanelLayout.setHorizontalGroup(
            acquirePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(acquirePanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(acquirePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(acquirePanelLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, acquirePanelLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CustomerNo, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, acquirePanelLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(27, 27, 27)
                        .addComponent(PropertyCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(acquirePanelLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(42, 42, 42)
                        .addComponent(TransactionType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(Finalize, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(acquirePanelLayout.createSequentialGroup()
                        .addGroup(acquirePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11))
                        .addGroup(acquirePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(acquirePanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(acquirePanelLayout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(PropertyPrice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE))
                .addGap(18, 18, 18))
        );
        acquirePanelLayout.setVerticalGroup(
            acquirePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(acquirePanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(acquirePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PropertyCode, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(acquirePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PropertyPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(acquirePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(TransactionType, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(acquirePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(acquirePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CustomerNo, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(acquirePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Finalize, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
        );

        MainPanel.addTab("            Buy            ", acquirePanel);

        jLabelLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabelLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelLogoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(MainPanel)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabelLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabelLogo, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void propertyTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_propertyTableMouseClicked
        int i = propertyTable.getSelectedRow();
        LotTable model = (LotTable) propertyTable.getModel();
        LotAvailability selectedStatus = model.getReportAt(i);
        Lot selectedProperty = selectedStatus.getLot();
        PropertyCode.setText(selectedProperty.getPropertyCode() + ", " + selectedProperty.getPropertyType());
        String transactionType = (String) TransactionType.getSelectedItem();
        double price = selectedProperty.calculatePrice(transactionType);
        PropertyPrice.setText("Php " + String.format("%.2f", price));
    }//GEN-LAST:event_propertyTableMouseClicked

    private void jLabelLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLogoMouseClicked
        dispose();
    }//GEN-LAST:event_jLabelLogoMouseClicked

    private void CustomerNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerNameActionPerformed

    private void PropertyPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PropertyPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PropertyPriceActionPerformed

    private void FinalizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FinalizeActionPerformed
        String paymentMethod = null;

// Check selected payment method
if (jCheckBox1.isSelected() && jCheckBox2.isSelected()) {
    JOptionPane.showMessageDialog(this, "Please select only one payment method.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
} else if (jCheckBox1.isSelected()) {
    paymentMethod = "CreditCard";
} else if (jCheckBox2.isSelected()) {
    paymentMethod = "BankTransfer";
}

if (paymentMethod == null) {
    JOptionPane.showMessageDialog(this, "Please select a payment method.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

// Get customer details
String customerName = CustomerName.getText().trim();
String customerContact = CustomerNo.getText().trim();

if (customerName.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Please enter the customer name.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

if (customerContact.isEmpty()) {
    JOptionPane.showMessageDialog(this, "Please enter the customer number.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

if (!customerContact.matches("\\d{11}")) {
    JOptionPane.showMessageDialog(this, "Customer number must be exactly 11 digits.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

// Get selected property
Lot selectedLot = getSelectedLot();
if (selectedLot == null) {
    JOptionPane.showMessageDialog(this, "No property selected.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

// Get transaction details
String transactionType = (String) TransactionType.getSelectedItem();
String propertyType = selectedLot.getPropertyType();
String lotStatus = selectedLot.getStatus();

// Validate property type and transaction type
if ("EmptyLot".equals(propertyType)) {
    if ("Rent".equals(transactionType)) {
        JOptionPane.showMessageDialog(this, "This property type cannot be rented.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
} else if (!"OneStory".equals(propertyType) && !"TwoStory".equals(propertyType)) {
    JOptionPane.showMessageDialog(this, "Invalid property type.", "Error", JOptionPane.ERROR_MESSAGE);
    return;
}

// Calculate price and handle transaction
double finalPrice;
if ("Buy".equals(transactionType)) {
    if ("Available".equals(lotStatus)) {
        finalPrice = selectedLot.calculatePrice("Buy");
        selectedLot.setStatus("Sold");
        td.recordTransaction(selectedLot, "Buy", paymentMethod, customerName, customerContact, finalPrice);
        td.importDetails();

        var filterResult = ld.getPropertySales(td)
            .stream()
            .collect(Collectors.toCollection(ArrayList::new));
        updateProperties(filterResult);

        JOptionPane.showMessageDialog(this, "Property bought successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, "This property is not available for purchase.", "Error", JOptionPane.ERROR_MESSAGE);
    }
} else if ("Rent".equals(transactionType)) {
    if ("Available".equals(lotStatus) && !"EmptyLot".equals(propertyType)) {
        finalPrice = selectedLot.calculatePrice("Rent") * 0.10; 
        selectedLot.setStatus("Rented");
        td.recordTransaction(selectedLot, "Rent", paymentMethod, customerName, customerContact, finalPrice);
        td.importDetails();

        var filterResult = ld.getPropertySales(td)
            .stream()
            .collect(Collectors.toCollection(ArrayList::new));
        updateProperties(filterResult);

        JOptionPane.showMessageDialog(this, "Property rented successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
    } else {
        JOptionPane.showMessageDialog(this, "This property is not available for rent.", "Error", JOptionPane.ERROR_MESSAGE);
    }
} else {
    JOptionPane.showMessageDialog(this, "Invalid transaction type selected.", "Error", JOptionPane.ERROR_MESSAGE);
}

    }//GEN-LAST:event_FinalizeActionPerformed

    private void jCheckAvailabilityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckAvailabilityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckAvailabilityActionPerformed

    private void RefreshPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshPropertiesActionPerformed
        jSizeMin.setText("");
        jSizeMax.setText("");
        jPriceMin.setText("");
        jPriceMax.setText("");
        jComboBlock.setSelectedItem("Any");
        jComboType.setSelectedItem("Any");
        jCheckAvailability.setSelected(false);

        updateProperties(ld.getPropertySales(td));
    }//GEN-LAST:event_RefreshPropertiesActionPerformed

    private void SearchPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchPropertiesActionPerformed
        String blockString = (String) jComboBlock.getSelectedItem();
        int block = blockString.equals("Any") ? -1 : Integer.parseInt(blockString);

        double sizeMin, sizeMax;
        try {
            sizeMin = jSizeMin.getText().trim().isEmpty() ? Double.NEGATIVE_INFINITY : Double.parseDouble(jSizeMin.getText().trim());
            sizeMax = jSizeMax.getText().trim().isEmpty() ? Double.POSITIVE_INFINITY : Double.parseDouble(jSizeMax.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid size range.");
            return;
        }

        double priceMin, priceMax;
        try {
            priceMin = jPriceMin.getText().trim().isEmpty() ? Double.NEGATIVE_INFINITY : Double.parseDouble(jPriceMin.getText().trim());
            priceMax = jPriceMax.getText().trim().isEmpty() ? Double.POSITIVE_INFINITY : Double.parseDouble(jPriceMax.getText().trim());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Invalid price range.");
            return;
        }

        String selectedType = (String) jComboType.getSelectedItem();
        boolean isAvailable = jCheckAvailability.isSelected();

        var filterResult = ld.getPropertySales(td)
        .stream()
        .filter(property ->
            (priceMin <= property.getLot().getPrice() && property.getLot().getPrice() <= priceMax) &&
            (sizeMin <= property.getLot().getSize() && property.getLot().getSize() <= sizeMax) &&
            (block == -1 || property.getLot().getBlockNo() == block) &&
            (selectedType.equals("Any") || property.getLot().getPropertyType().equals(selectedType)) &&
            (!isAvailable || "Available".equals(property.getLot().getStatus()))
        )
        .collect(Collectors.toCollection(ArrayList::new));

        updateProperties(filterResult);
    }//GEN-LAST:event_SearchPropertiesActionPerformed

    private void jPriceMaxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPriceMaxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPriceMaxActionPerformed

    private void jSizeMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSizeMinActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSizeMinActionPerformed

    private void PropertyCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PropertyCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PropertyCodeActionPerformed

    private void CustomerNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CustomerNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CustomerNoActionPerformed

    private void TransactionTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TransactionTypeActionPerformed
        int selectedRowIndex = propertyTable.getSelectedRow();
        if (selectedRowIndex >= 0) {
            LotTable model = (LotTable) propertyTable.getModel();
            LotAvailability selectedReport = model.getReportAt(selectedRowIndex);
            Lot selectedProperty = selectedReport.getLot();
            String transactionType = (String) TransactionType.getSelectedItem();
            double price = selectedProperty.calculatePrice(transactionType);
            PropertyPrice.setText("Php " + String.format("%.2f", price));
        } else {
            PropertyCode.setText("");
            PropertyPrice.setText("");
        }
    }//GEN-LAST:event_TransactionTypeActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BuyLotForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new BuyLotForm().setVisible(true);
        });
    }

    private void displayPropertyTable() {
        ld = LotDatabase.getInstance();
        td = TransactionDatabase.getInstance(ld);
        ArrayList<LotAvailability> propertiesList = ld.getPropertySales(td);
        updateProperties(propertiesList);
    }
    
    private void updateProperties(ArrayList<LotAvailability> reportList) {
        LotTable propertiesModel = new LotTable(reportList);
        this.propertyTable.setModel(propertiesModel);
    }

    private Lot getSelectedLot() {
    String propertyCodeText = PropertyCode.getText().trim();

    if (propertyCodeText.isEmpty()) {
        return null;  
    }

    String[] parts = propertyCodeText.split(",", 2);
    
    if (parts.length > 0) {
        String propertyCode = parts[0].trim(); 
        return ld.getLotById(propertyCode); 
    }
    return null;
}   

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CustomerName;
    private javax.swing.JTextField CustomerNo;
    private javax.swing.JButton Finalize;
    private javax.swing.JTabbedPane MainPanel;
    private javax.swing.JTextField PropertyCode;
    private javax.swing.JTextField PropertyPrice;
    private javax.swing.JButton RefreshProperties;
    private javax.swing.JButton SearchProperties;
    private javax.swing.JComboBox<String> TransactionType;
    private javax.swing.JPanel acquirePanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckAvailability;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox<String> jComboBlock;
    private javax.swing.JComboBox<String> jComboType;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelLogo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField jPriceMax;
    private javax.swing.JTextField jPriceMin;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jSizeMax;
    private javax.swing.JTextField jSizeMin;
    private javax.swing.JPanel propertyPanel;
    private javax.swing.JTable propertyTable;
    // End of variables declaration//GEN-END:variables
}
